{"id":"node_modules/glslify-deps/sync.js","dependencies":[{"name":"/Users/juan/Projects/moire-effect/package.json","includedInParent":true,"mtime":1641979595379},{"name":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/package.json","includedInParent":true,"mtime":1641977368376},{"name":"glsl-tokenizer/string","loc":{"line":1,"column":23},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/glsl-tokenizer/string.js"},{"name":"@choojs/findup","loc":{"line":2,"column":23},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/@choojs/findup/index.js"},{"name":"graceful-fs","loc":{"line":3,"column":23},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/graceful-fs/graceful-fs.js"},{"name":"map-limit","loc":{"line":4,"column":23},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/map-limit/index.js"},{"name":"inherits","loc":{"line":5,"column":23},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/inherits/inherits_browser.js"},{"name":"events/","loc":{"line":6,"column":23},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/events/events.js"},{"name":"path","loc":{"line":7,"column":23},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/node-libs-browser/node_modules/path-browserify/index.js"},{"name":"glsl-resolve","loc":{"line":9,"column":26},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/glsl-resolve/index.js"},{"name":"resolve","loc":{"line":10,"column":26},"parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/resolve/index.js"},{"name":"process","parent":"/Users/juan/Projects/moire-effect/node_modules/glslify-deps/sync.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar tokenize = require('glsl-tokenizer/string')\nvar findup   = require('@choojs/findup').sync\nvar fs       = require('graceful-fs')\nvar map      = require('map-limit')\nvar inherits = require('inherits')\nvar Emitter  = require('events/')\nvar path     = require('path')\n\nvar glslResolve = require('glsl-resolve').sync\nvar nodeResolve = require('resolve').sync\n\nvar inlineName   = '__INLINE__' + Math.random()\nvar inlineSource = ''\n\nmodule.exports = Depper\n\n/**\n * Creates a new instance of glslify-deps. Generally, you'll\n * want to use one instance per bundle.\n *\n * @class\n * @param {String} cwd The root directory of your shader. Defaults to process.cwd()\n */\ninherits(Depper, Emitter)\nfunction Depper(opts) {\n  if (!(this instanceof Depper)) return new Depper(opts)\n  Emitter.call(this)\n\n  opts = typeof opts === 'string' ? { cwd: opts } : opts\n  opts = opts || {}\n\n  this._deps       = []\n  this._cwd        = opts.cwd || process.cwd()\n  this._cache      = {}\n  this._i          = 0\n  this._transforms = []\n  this._trCache    = {}\n  this._fileCache  = opts.files || {}\n\n  this._globalTransforms = []\n\n  this._readFile = cacheWrap(opts.readFileSync || defaultRead, this._fileCache)\n  this.resolve   = opts.resolve || glslResolve\n\n  if (typeof this._cwd !== 'string') {\n    throw new Error('glslify-deps: cwd must be a string path')\n  }\n}\n\nDepper.prototype.inline = function(source, basedir) {\n  var inlineFile = path.resolve(basedir || process.cwd(), inlineName)\n\n  inlineSource = source\n\n  return this.add(inlineFile)\n}\n\n/**\n * Adds a transform to use on your local dependencies.\n * Note that this should be used before calling `add`.\n *\n * Transforms are handled using a different API to browserify, e.g.:\n *\n * ``` js\n * exports.sync = function transform(filename, src, opts) {\n *   return src.toUpperCase()\n * }\n * ```\n * \n * This is also different from the async transform API.\n *\n * Where `filename` is the absolute file path, `src` is the shader source\n * as a string, `opts` is an options object for configuration.\n *\n * @param {String|Function} transform\n * @param {Object} opts\n */\nDepper.prototype.transform = function(transform, opts) {\n  var name = typeof transform === 'string' ? transform : null\n  var list = opts && opts.global\n    ? this._globalTransforms\n    : this._transforms\n\n  // post transforms are ignored by glslify-deps, to be handled\n  // by glslify after the file has been bundled.\n  if (opts && opts.post) return this\n\n  transform = this.resolveTransform(transform)\n  list.push({ tr: transform, opts: opts, name: name })\n\n  return this\n}\n\n/**\n * Adds a shader file to the graph, including its dependencies\n * which are resolved in this step. Transforms are also applied\n * in the process too, as they may potentially add or remove dependent\n * modules.\n *\n * @param {String} filename The absolute path of this file.\n * @param {String} src The shader source for this file.\n *\n * Returns an array of dependencies discovered so far as its second argument.\n */\nDepper.prototype.add = function(filename) {\n  var basedir = path.dirname(filename = path.resolve(filename))\n  var cache   = this._cache\n  var self    = this\n  var exports = []\n  var imports = []\n\n  var dep = {\n      id: this._i++\n    , deps: {}\n    , file: filename\n    , source: null\n    , entry: this._i === 1\n  }\n\n  this._deps.push(dep)\n  var src = this.readFile(filename)\n  var trs = self.getTransformsForFile(filename)\n  self.emit('file', filename)\n  src = self.applyTransforms(filename, src, trs)\n  dep.source = src\n  extractPreprocessors()\n\n  resolveImports()\n  return self._deps\n\n  function extractPreprocessors() {\n    var tokens = tokenize(dep.source)\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n      if (token.type !== 'preprocessor') continue\n\n      var data = token.data\n      if (!glslifyPreprocessor(data)) continue\n\n      var exp = glslifyExport(data)\n      var imp = glslifyImport(data)\n      if (exp) exports.push(exp[1])\n      if (imp) imports.push(imp[2])\n    }\n  }\n\n  function resolveImports(resolved) {\n    imports.forEach(function (imp) {\n      var importName = imp.split(/\\s*,\\s*/).shift()\n\n      importName = importName.trim()\n      importName = importName.replace(/^'|'$/g, '')\n      importName = importName.replace(/^\"|\"$/g, '')\n\n      var resolved = self.resolve(importName, { basedir: basedir })\n      if (cache[resolved]) {\n        dep.deps[importName] = cache[resolved].id\n      }\n      var i = self._i\n      cache[resolved] = self.add(resolved)[i]\n      dep.deps[importName] = cache[resolved].id\n    })\n  }\n}\n\nDepper.prototype.readFile = function(filename) {\n  if (path.basename(filename) !== inlineName)\n    return this._readFile(filename)\n\n  return inlineSource\n}\n\n/**\n * Determines which transforms to use for a particular file.\n * The rules here are the same you see in browserify:\n *\n * - your shader files will have your specified transforms applied to them\n * - shader files in node_modules do not get local transforms\n * - all files will apply transforms specified in `glslify.transform` in your\n *   `package.json` file, albeit after any transforms you specified using\n *   `depper.transform`.\n *\n * @param {String} filename The absolute path of the file in question.\n */\nDepper.prototype.getTransformsForFile = function(filename) {\n  var self  = this\n  var entry = this._deps[0]\n\n  if (!entry) throw new Error(\n    'getTransformsForFile may only be called after adding your entry file'\n  )\n\n  var entryDir     = path.dirname(path.resolve(entry.file))\n  var fileDir      = path.dirname(path.resolve(filename))\n  var relative     = path.relative(entryDir, fileDir).split(path.sep)\n  var node_modules = relative.indexOf('node_modules') !== -1\n  var trLocal      = node_modules ? [] : this._transforms\n  var trCache      = this._trCache\n\n  if (trCache[fileDir]) {\n    return trCache[fileDir]\n  }\n\n  try { var found = findup(fileDir, 'package.json') }\n  catch (err) {\n    var notFound = err.message === 'not found'\n    if (notFound) return register([])\n    else throw err\n  }\n\n  var pkg = path.join(found, 'package.json')\n  var pkgjson = JSON.parse(self.readFile(pkg))\n\n  var transforms = (\n       pkgjson['glslify']\n    && pkgjson['glslify']['transform']\n    || []\n  )\n\n  transforms = transforms.map(function(key) {\n    var transform = Array.isArray(key)\n      ? key\n      : [key, {}]\n\n    var key = transform[0]\n    var opt = transform[1]\n\n    if (opt) {\n      delete opt.global\n      delete opt.post\n    }\n\n    return { tr: key, opts: opt, name: key }\n  }).map(function(tr) {\n    tr.tr = self.resolveTransform(tr.tr)\n    return tr\n  })\n\n  return register(transforms)\n\n  function register(transforms) {\n    return trCache[fileDir] = trLocal\n      .concat(transforms)\n      .concat(self._globalTransforms)\n  }\n}\n\n/**\n * Resolves a transform.\n *\n * Functions are retained as-is.\n * Strings are resolved using node's `require` resolution algorithm,\n * and then required directly.\n *\n * @param {String|Function} transform\n */\nDepper.prototype.resolveTransform = function(transform) {\n  if (typeof transform === 'string') {\n    transform = nodeResolve(transform, {\n      basedir: this._cwd\n    })\n\n    var m = require(transform)\n    if (!m || typeof m.sync !== 'function') {\n      throw new Error('transform ' + transform + ' does not provide a'\n        + ' synchronous interface')\n    }\n    transform = m.sync\n  }\n  return transform\n}\n\n/**\n * Applies a transform to a string.\n *\n * Note that transforms here are passed in differently to other methods:\n * - `tr.tr` should point to the transform function.\n * - `tr.opts` should contain the options for the transform, if applicable.\n *\n * @param {String} filename The absolute path of the file you're transforming.\n * @param {String} src The shader source you'd like to transform.\n * @param {Array} transforms The transforms you'd like to apply.\n *\n * Returns the transformed source string.\n */\nDepper.prototype.applyTransforms = function(filename, src, transforms) {\n  transforms.forEach(function (tr) {\n    var opts = tr.opts\n    if (!opts || typeof opts !== 'object') opts = {}\n    src = tr.tr(filename, src+'', tr.opts)\n  })\n  return src\n}\n\nfunction glslifyPreprocessor(data) {\n  return /#pragma glslify:/.test(data)\n}\n\nfunction glslifyExport(data) {\n  return /#pragma glslify:\\s*export\\(([^\\)]+)\\)/.exec(data)\n}\n\nfunction glslifyImport(data) {\n  return /#pragma glslify:\\s*([^=\\s]+)\\s*=\\s*require\\(([^\\)]+)\\)/.exec(data)\n}\n\nfunction defaultRead(src) {\n  return fs.readFileSync(src, 'utf8')\n}\n\nfunction cacheWrap(read, cache) {\n  // resolve all cached files such that they match\n  // all of the paths glslify handles, which are otherwise\n  // absolute\n  cache = Object.keys(cache).reduce(function(newCache, file) {\n    newCache[path.resolve(file)] = cache[file]\n    return newCache\n  }, {})\n\n  return function readFromCache(filename) {\n    if (!cache[filename]) {\n      cache[filename] = read(filename)\n    }\n    return cache[filename]\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/glslify-deps/sync.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/glslify-deps/sync.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}}],"sources":{"node_modules/glslify-deps/sync.js":"var tokenize = require('glsl-tokenizer/string')\nvar findup   = require('@choojs/findup').sync\nvar fs       = require('graceful-fs')\nvar map      = require('map-limit')\nvar inherits = require('inherits')\nvar Emitter  = require('events/')\nvar path     = require('path')\n\nvar glslResolve = require('glsl-resolve').sync\nvar nodeResolve = require('resolve').sync\n\nvar inlineName   = '__INLINE__' + Math.random()\nvar inlineSource = ''\n\nmodule.exports = Depper\n\n/**\n * Creates a new instance of glslify-deps. Generally, you'll\n * want to use one instance per bundle.\n *\n * @class\n * @param {String} cwd The root directory of your shader. Defaults to process.cwd()\n */\ninherits(Depper, Emitter)\nfunction Depper(opts) {\n  if (!(this instanceof Depper)) return new Depper(opts)\n  Emitter.call(this)\n\n  opts = typeof opts === 'string' ? { cwd: opts } : opts\n  opts = opts || {}\n\n  this._deps       = []\n  this._cwd        = opts.cwd || process.cwd()\n  this._cache      = {}\n  this._i          = 0\n  this._transforms = []\n  this._trCache    = {}\n  this._fileCache  = opts.files || {}\n\n  this._globalTransforms = []\n\n  this._readFile = cacheWrap(opts.readFileSync || defaultRead, this._fileCache)\n  this.resolve   = opts.resolve || glslResolve\n\n  if (typeof this._cwd !== 'string') {\n    throw new Error('glslify-deps: cwd must be a string path')\n  }\n}\n\nDepper.prototype.inline = function(source, basedir) {\n  var inlineFile = path.resolve(basedir || process.cwd(), inlineName)\n\n  inlineSource = source\n\n  return this.add(inlineFile)\n}\n\n/**\n * Adds a transform to use on your local dependencies.\n * Note that this should be used before calling `add`.\n *\n * Transforms are handled using a different API to browserify, e.g.:\n *\n * ``` js\n * exports.sync = function transform(filename, src, opts) {\n *   return src.toUpperCase()\n * }\n * ```\n * \n * This is also different from the async transform API.\n *\n * Where `filename` is the absolute file path, `src` is the shader source\n * as a string, `opts` is an options object for configuration.\n *\n * @param {String|Function} transform\n * @param {Object} opts\n */\nDepper.prototype.transform = function(transform, opts) {\n  var name = typeof transform === 'string' ? transform : null\n  var list = opts && opts.global\n    ? this._globalTransforms\n    : this._transforms\n\n  // post transforms are ignored by glslify-deps, to be handled\n  // by glslify after the file has been bundled.\n  if (opts && opts.post) return this\n\n  transform = this.resolveTransform(transform)\n  list.push({ tr: transform, opts: opts, name: name })\n\n  return this\n}\n\n/**\n * Adds a shader file to the graph, including its dependencies\n * which are resolved in this step. Transforms are also applied\n * in the process too, as they may potentially add or remove dependent\n * modules.\n *\n * @param {String} filename The absolute path of this file.\n * @param {String} src The shader source for this file.\n *\n * Returns an array of dependencies discovered so far as its second argument.\n */\nDepper.prototype.add = function(filename) {\n  var basedir = path.dirname(filename = path.resolve(filename))\n  var cache   = this._cache\n  var self    = this\n  var exports = []\n  var imports = []\n\n  var dep = {\n      id: this._i++\n    , deps: {}\n    , file: filename\n    , source: null\n    , entry: this._i === 1\n  }\n\n  this._deps.push(dep)\n  var src = this.readFile(filename)\n  var trs = self.getTransformsForFile(filename)\n  self.emit('file', filename)\n  src = self.applyTransforms(filename, src, trs)\n  dep.source = src\n  extractPreprocessors()\n\n  resolveImports()\n  return self._deps\n\n  function extractPreprocessors() {\n    var tokens = tokenize(dep.source)\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n      if (token.type !== 'preprocessor') continue\n\n      var data = token.data\n      if (!glslifyPreprocessor(data)) continue\n\n      var exp = glslifyExport(data)\n      var imp = glslifyImport(data)\n      if (exp) exports.push(exp[1])\n      if (imp) imports.push(imp[2])\n    }\n  }\n\n  function resolveImports(resolved) {\n    imports.forEach(function (imp) {\n      var importName = imp.split(/\\s*,\\s*/).shift()\n\n      importName = importName.trim()\n      importName = importName.replace(/^'|'$/g, '')\n      importName = importName.replace(/^\"|\"$/g, '')\n\n      var resolved = self.resolve(importName, { basedir: basedir })\n      if (cache[resolved]) {\n        dep.deps[importName] = cache[resolved].id\n      }\n      var i = self._i\n      cache[resolved] = self.add(resolved)[i]\n      dep.deps[importName] = cache[resolved].id\n    })\n  }\n}\n\nDepper.prototype.readFile = function(filename) {\n  if (path.basename(filename) !== inlineName)\n    return this._readFile(filename)\n\n  return inlineSource\n}\n\n/**\n * Determines which transforms to use for a particular file.\n * The rules here are the same you see in browserify:\n *\n * - your shader files will have your specified transforms applied to them\n * - shader files in node_modules do not get local transforms\n * - all files will apply transforms specified in `glslify.transform` in your\n *   `package.json` file, albeit after any transforms you specified using\n *   `depper.transform`.\n *\n * @param {String} filename The absolute path of the file in question.\n */\nDepper.prototype.getTransformsForFile = function(filename) {\n  var self  = this\n  var entry = this._deps[0]\n\n  if (!entry) throw new Error(\n    'getTransformsForFile may only be called after adding your entry file'\n  )\n\n  var entryDir     = path.dirname(path.resolve(entry.file))\n  var fileDir      = path.dirname(path.resolve(filename))\n  var relative     = path.relative(entryDir, fileDir).split(path.sep)\n  var node_modules = relative.indexOf('node_modules') !== -1\n  var trLocal      = node_modules ? [] : this._transforms\n  var trCache      = this._trCache\n\n  if (trCache[fileDir]) {\n    return trCache[fileDir]\n  }\n\n  try { var found = findup(fileDir, 'package.json') }\n  catch (err) {\n    var notFound = err.message === 'not found'\n    if (notFound) return register([])\n    else throw err\n  }\n\n  var pkg = path.join(found, 'package.json')\n  var pkgjson = JSON.parse(self.readFile(pkg))\n\n  var transforms = (\n       pkgjson['glslify']\n    && pkgjson['glslify']['transform']\n    || []\n  )\n\n  transforms = transforms.map(function(key) {\n    var transform = Array.isArray(key)\n      ? key\n      : [key, {}]\n\n    var key = transform[0]\n    var opt = transform[1]\n\n    if (opt) {\n      delete opt.global\n      delete opt.post\n    }\n\n    return { tr: key, opts: opt, name: key }\n  }).map(function(tr) {\n    tr.tr = self.resolveTransform(tr.tr)\n    return tr\n  })\n\n  return register(transforms)\n\n  function register(transforms) {\n    return trCache[fileDir] = trLocal\n      .concat(transforms)\n      .concat(self._globalTransforms)\n  }\n}\n\n/**\n * Resolves a transform.\n *\n * Functions are retained as-is.\n * Strings are resolved using node's `require` resolution algorithm,\n * and then required directly.\n *\n * @param {String|Function} transform\n */\nDepper.prototype.resolveTransform = function(transform) {\n  if (typeof transform === 'string') {\n    transform = nodeResolve(transform, {\n      basedir: this._cwd\n    })\n\n    var m = require(transform)\n    if (!m || typeof m.sync !== 'function') {\n      throw new Error('transform ' + transform + ' does not provide a'\n        + ' synchronous interface')\n    }\n    transform = m.sync\n  }\n  return transform\n}\n\n/**\n * Applies a transform to a string.\n *\n * Note that transforms here are passed in differently to other methods:\n * - `tr.tr` should point to the transform function.\n * - `tr.opts` should contain the options for the transform, if applicable.\n *\n * @param {String} filename The absolute path of the file you're transforming.\n * @param {String} src The shader source you'd like to transform.\n * @param {Array} transforms The transforms you'd like to apply.\n *\n * Returns the transformed source string.\n */\nDepper.prototype.applyTransforms = function(filename, src, transforms) {\n  transforms.forEach(function (tr) {\n    var opts = tr.opts\n    if (!opts || typeof opts !== 'object') opts = {}\n    src = tr.tr(filename, src+'', tr.opts)\n  })\n  return src\n}\n\nfunction glslifyPreprocessor(data) {\n  return /#pragma glslify:/.test(data)\n}\n\nfunction glslifyExport(data) {\n  return /#pragma glslify:\\s*export\\(([^\\)]+)\\)/.exec(data)\n}\n\nfunction glslifyImport(data) {\n  return /#pragma glslify:\\s*([^=\\s]+)\\s*=\\s*require\\(([^\\)]+)\\)/.exec(data)\n}\n\nfunction defaultRead(src) {\n  return fs.readFileSync(src, 'utf8')\n}\n\nfunction cacheWrap(read, cache) {\n  // resolve all cached files such that they match\n  // all of the paths glslify handles, which are otherwise\n  // absolute\n  cache = Object.keys(cache).reduce(function(newCache, file) {\n    newCache[path.resolve(file)] = cache[file]\n    return newCache\n  }, {})\n\n  return function readFromCache(filename) {\n    if (!cache[filename]) {\n      cache[filename] = read(filename)\n    }\n    return cache[filename]\n  }\n}\n"},"lineCount":329}},"error":null,"hash":"606ad2ff3ca3382b8dcf549e3f0c5477","cacheData":{"env":{}}}