{"id":"node_modules/glsl-inject-defines/string.js","dependencies":[{"name":"/Users/juan/Projects/moire-effect/package.json","includedInParent":true,"mtime":1641979595379},{"name":"/Users/juan/Projects/moire-effect/node_modules/glsl-inject-defines/package.json","includedInParent":true,"mtime":1641977352905},{"name":"glsl-tokenizer","loc":{"line":1,"column":23},"parent":"/Users/juan/Projects/moire-effect/node_modules/glsl-inject-defines/string.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/glsl-tokenizer/string.js"},{"name":"glsl-token-string","loc":{"line":2,"column":24},"parent":"/Users/juan/Projects/moire-effect/node_modules/glsl-inject-defines/string.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/glsl-token-string/index.js"},{"name":"glsl-token-inject-block","loc":{"line":3,"column":21},"parent":"/Users/juan/Projects/moire-effect/node_modules/glsl-inject-defines/string.js","resolved":"/Users/juan/Projects/moire-effect/node_modules/glsl-token-inject-block/index.js"}],"generated":{"js":"var tokenize = require('glsl-tokenizer')\nvar stringify = require('glsl-token-string')\nvar inject = require('glsl-token-inject-block')\n\nmodule.exports = function glslInjectDefine (source, defines) {\n  if (!defines) {\n    return source\n  }\n\n  var keys = Object.keys(defines)\n  if (keys.length === 0) {\n    return source\n  }\n\n  var tokens = tokenize(source)\n  for (var i=keys.length-1; i>=0; i--) {\n    var key = keys[i]\n    var val = String(defines[key])\n    if (val) { // allow empty value\n      val = ' ' + val\n    }\n\n    inject(tokens, {\n      type: 'preprocessor',\n      data: '#define ' + key + val\n    })\n  }\n  \n  return stringify(tokens)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/glsl-inject-defines/string.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"node_modules/glsl-inject-defines/string.js":"var tokenize = require('glsl-tokenizer')\nvar stringify = require('glsl-token-string')\nvar inject = require('glsl-token-inject-block')\n\nmodule.exports = function glslInjectDefine (source, defines) {\n  if (!defines) {\n    return source\n  }\n\n  var keys = Object.keys(defines)\n  if (keys.length === 0) {\n    return source\n  }\n\n  var tokens = tokenize(source)\n  for (var i=keys.length-1; i>=0; i--) {\n    var key = keys[i]\n    var val = String(defines[key])\n    if (val) { // allow empty value\n      val = ' ' + val\n    }\n\n    inject(tokens, {\n      type: 'preprocessor',\n      data: '#define ' + key + val\n    })\n  }\n  \n  return stringify(tokens)\n}\n"},"lineCount":31}},"error":null,"hash":"beb8dfb3dd47d20588804cb6d0f790ae","cacheData":{"env":{}}}