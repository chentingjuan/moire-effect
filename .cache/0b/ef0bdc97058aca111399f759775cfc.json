{"id":"p5js/sin-2-thick/index.html","dependencies":[{"name":"./../../resources/dat.gui.min.js","dynamic":true,"resolved":"/Users/juan/Projects/moire-effect/resources/dat.gui.min.js","parent":"/Users/juan/Projects/moire-effect/p5js/sin-2-thick/index.html"},{"name":"./../../resources/p5.min.js","dynamic":true,"resolved":"/Users/juan/Projects/moire-effect/resources/p5.min.js","parent":"/Users/juan/Projects/moire-effect/p5js/sin-2-thick/index.html"},{"name":"./main.css","dynamic":true,"resolved":"/Users/juan/Projects/moire-effect/p5js/sin-2-thick/main.css","parent":"/Users/juan/Projects/moire-effect/p5js/sin-2-thick/index.html"},{"name":"./../../assets/images/Artfield-logo-w.png","dynamic":true,"resolved":"/Users/juan/Projects/moire-effect/assets/images/Artfield-logo-w.png","parent":"/Users/juan/Projects/moire-effect/p5js/sin-2-thick/index.html"},{"name":"_css_loader","parent":"/Users/juan/Projects/moire-effect/p5js/sin-2-thick/index.html","resolved":"/Users/juan/Projects/moire-effect/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/Users/juan/Projects/moire-effect/package.json","includedInParent":true,"mtime":1643101443999}],"generated":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <title>Moire Effect</title>\n    <script src=\"/26af09ec7ab68c450bd49490b7260aa0.js\"></script>\n    <script src=\"/02f40b564bdb5415d2b89e86cc28312c.js\"></script>\n\n    <link rel=\"stylesheet\" href=\"/7edb3af3714664b7085542ca22e17c2d.css\">\n  </head>\n\n  <body>\n    <div class=\"wrapper\">\n      <canvas id=\"c\" style=\"opacity: 1;\"></canvas>\n      <canvas id=\"d\" style=\"opacity: 1;\"></canvas>\n      <!-- <h1>Moir√© effect is everywhere.</h1> -->\n      <img src=\"/0e4fcfe23bd1179b37b59ee81d662b05.png\" alt=\"\">\n    </div>\n  </body>\n</html>\n\n<script>var opts = {\n  startRot: 2.8,\n  ampl: 45,\n  // ampl: 57,\n  // lineWidth: 28,\n  lineWidth: 30,\n  distance: 32,\n  // distance: 26,\n  opacity: 1,\n  animFrameCount: 100\n};\nvar canvas = document.getElementById(\"c\");\nvar danvas = document.getElementById(\"d\");\nvar ctx = canvas.getContext(\"2d\");\nvar dtx = danvas.getContext(\"2d\");\nvar cw = canvas.width = danvas.width = window.innerWidth,\n    cx = cw / 2;\nvar ch = canvas.height = danvas.height = window.innerHeight,\n    cy = ch / 2;\nvar tx = cx,\n    ty = cy;\nvar easing = 0.05; // let grad, dgrad\n\nvar grad = ctx.createLinearGradient(-cw / 2, ch / 2, cw / 2, -ch / 2);\nvar dgrad = dtx.createLinearGradient(-cw / 2, ch / 2, cw / 2, -ch / 2);\nvar xRange = 2.2,\n    yRange = opts.distance;\nvar cols = parseInt(3 * cw / xRange) + 1;\nvar rows = parseInt(3 * ch / yRange) + 1;\nvar cGrids = [],\n    dGrids = [];\n\nfunction setup() {\n  frameRate(18); // let gui = new dat.GUI()\n  // // gui.add(opts, 'startRot', 0, 6.28).step(0.01).onChange(()=>{ setUpC(); draw(); });\n  // gui.add(opts, 'ampl', 10, 100).onChange(()=>{ setUpC(); draw(); })\n  // gui.add(opts, 'distance', 10, 50).onChange(()=>{ setUpC(); draw(); })\n  // gui.add(opts, 'lineWidth', 1, 50).onChange(()=>{ setUpC(); draw(); })\n  // gui.add(opts, 'opacity', 0, 1).onChange(()=>{ setUpC(); draw(); });\n  // gui.add(opts, 'animFrameCount', 1, 100).onChange(draw);\n\n  noCanvas();\n  mouseX = cx, mouseY = cy;\n\n  for (var x = 0; x < cols; x++) {\n    cGrids[x] = [], dGrids[x] = [];\n\n    for (var y = 0; y < rows; y++) {\n      cGrids[x][y] = 0.0, dGrids[x][y] = 0.0;\n    }\n  }\n\n  var yOffset = 0;\n\n  for (var _y = 0; _y < rows; _y++) {\n    var xOffset = 0;\n\n    for (var _x = 0; _x < cols; _x++) {\n      cGrids[_x][_y] = [_x * xRange - cw * 1.5, sin(yOffset / 3 + xOffset) * sin(yOffset) * opts.ampl * 1 + (_y * opts.distance - ch * 1.5)];\n      dGrids[_x][_y] = [_x * xRange - cw * 1.5, sin(yOffset / 8 + xOffset) * sin(yOffset) * opts.ampl * 0.9 + (_y * opts.distance - ch * 1.5)];\n      xOffset += .01;\n    }\n\n    yOffset += .1;\n  }\n\n  setUpC();\n}\n\nfunction draw() {\n  dtx.lineWidth = opts.lineWidth;\n  dgrad = dtx.createLinearGradient(-cw / 2, ch / 2, cw / 2, -ch / 2);\n  dgrad.addColorStop(0, \"rgba(60, 10, 10, 0.9)\");\n  dgrad.addColorStop(0.3, \"rgba(0, 0, 0, \".concat(opts.opacity, \")\"));\n  dgrad.addColorStop(0.7, \"rgba(0, 0, 0, \".concat(opts.opacity, \")\"));\n  dgrad.addColorStop(1, \"rgba(10, 10, 60, 0.9)\");\n  dtx.strokeStyle = dgrad;\n  var counter = frameCount / opts.animFrameCount; // ctx.clearRect(-cw, -ch, 2*cw, 2*ch)\n\n  dtx.clearRect(-cw, -ch, 2 * cw, 2 * ch);\n  var dx = mouseX - tx;\n  tx += dx * easing;\n  var dy = mouseY - ty;\n  ty += dy * easing; // cSinLine()\n  // dSineLine(counter)\n\n  dSineLines(counter);\n}\n\nfunction setUpC() {\n  ctx.clearRect(-cw, -ch, 2 * cw, 2 * ch);\n  ctx.lineWidth = opts.lineWidth;\n  grad = ctx.createLinearGradient(-cw / 2, ch / 2, cw / 2, -ch / 2);\n  grad.addColorStop(0, \"rgba(60, 10, 10, 0.9)\");\n  grad.addColorStop(0.3, \"rgba(0, 0, 0, \".concat(opts.opacity, \")\"));\n  grad.addColorStop(0.7, \"rgba(0, 0, 0, \".concat(opts.opacity, \")\"));\n  grad.addColorStop(1, \"rgba(10, 10, 60, 0.9)\");\n  ctx.strokeStyle = grad;\n  cSineLines();\n}\n\nfunction sineLines(offset) {\n  var yOffset = 0;\n\n  for (var y = 0; y < rows; y++) {\n    var xOffset = 0;\n    ctx.save();\n    dtx.save();\n    ctx.translate(cx, cy);\n    dtx.translate(cx + (tx - cx) / 5, cy + (ty - cy) / 5);\n    dtx.rotate(offset / 2 + opts.startRot + (tx - cx) / (cw * 3));\n    ctx.beginPath();\n    dtx.beginPath();\n\n    for (var x = 0; x < cols; x++) {\n      ctx.lineTo(cGrids[x][y][0], cGrids[x][y][1]);\n      dtx.lineTo(dGrids[x][y][0], dGrids[x][y][1]);\n      xOffset += .01;\n    }\n\n    ctx.stroke();\n    dtx.stroke();\n    ctx.restore();\n    dtx.restore();\n    yOffset += .1;\n  }\n}\n\nfunction cSineLines() {\n  var yOffset = 0;\n\n  for (var y = 0; y < rows; y++) {\n    var xOffset = 0;\n    ctx.save(); // ctx.translate(cx * 2/3, cy * 2/3)\n\n    ctx.translate(cx, cy);\n    ctx.scale(0.95, 0.95);\n    ctx.beginPath();\n\n    for (var x = 0; x < cols; x++) {\n      ctx.lineTo(cGrids[x][y][0], cGrids[x][y][1]);\n      xOffset += .01;\n    }\n\n    ctx.stroke();\n    ctx.restore();\n    yOffset += .1;\n  }\n}\n\nfunction dSineLines(offset) {\n  var yOffset = 0;\n\n  for (var y = 0; y < rows; y++) {\n    var xOffset = 0;\n    dtx.save();\n    dtx.translate(cx + (tx - cx) / 6, cy + (ty - cy) / 6); // dtx.rotate(1)\n\n    dtx.rotate(offset / 2 + opts.startRot + (tx - cx * 1.8) / (cw * 2));\n    dtx.scale(0.95, 0.95);\n    dtx.beginPath();\n\n    for (var x = 0; x < cols; x++) {\n      dtx.lineTo(dGrids[x][y][0], dGrids[x][y][1]);\n      xOffset += .01;\n    }\n\n    dtx.stroke();\n    dtx.restore();\n    yOffset += .1;\n  }\n}</script>\n"},"sourceMaps":null,"error":null,"hash":"f643d9f9c42aa412cc29700a2495e0d0","cacheData":{"env":{}}}