{"id":"p5js/noise-2/index.html","dependencies":[{"name":"./../../resources/dat.gui.min.js","dynamic":true,"resolved":"/Users/juan/Projects/moire-effect/resources/dat.gui.min.js","parent":"/Users/juan/Projects/moire-effect/p5js/noise-2/index.html"},{"name":"./../../resources/p5.min.js","dynamic":true,"resolved":"/Users/juan/Projects/moire-effect/resources/p5.min.js","parent":"/Users/juan/Projects/moire-effect/p5js/noise-2/index.html"},{"name":"./main.css","dynamic":true,"resolved":"/Users/juan/Projects/moire-effect/p5js/noise-2/main.css","parent":"/Users/juan/Projects/moire-effect/p5js/noise-2/index.html"},{"name":"./../../assets/images/Artfield-logo-w.png","dynamic":true,"resolved":"/Users/juan/Projects/moire-effect/assets/images/Artfield-logo-w.png","parent":"/Users/juan/Projects/moire-effect/p5js/noise-2/index.html"},{"name":"/Users/juan/Projects/moire-effect/package.json","includedInParent":true,"mtime":1641979595379}],"generated":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <title>Moire Effect</title>\n    <script src=\"/26af09ec7ab68c450bd49490b7260aa0.js\"></script>\n    <script src=\"/02f40b564bdb5415d2b89e86cc28312c.js\"></script>\n\n    <link rel=\"stylesheet\" href=\"/f9785278999299ad1805a92ce1986515.css\">\n  </head>\n\n  <body>\n    <div class=\"wrapper\">\n      <canvas id=\"c\"></canvas>\n      <canvas id=\"d\"></canvas>\n      <img src=\"/0e4fcfe23bd1179b37b59ee81d662b05.png\" alt=\"\">\n      <!-- <h1>Moir√© effect is everywhere.</h1> -->\n    </div>\n  </body>\n\n  <script>var opts = {\n  rot: 0,\n  ampl: 360,\n  lineWidth: 1,\n  distance: 15,\n  mouseEasing: 0.02\n};\nvar canvas = document.getElementById(\"c\");\nvar danvas = document.getElementById(\"d\");\nvar ctx = canvas.getContext(\"2d\");\nvar dtx = danvas.getContext(\"2d\");\nvar cw = canvas.width = danvas.width = window.innerWidth,\n    cx = cw / 2;\nvar ch = canvas.height = danvas.height = window.innerHeight,\n    cy = ch / 2;\nvar tx = cx,\n    ty = cy;\nvar easing = 0.02;\nvar xRange = 8,\n    yRange = opts.distance; // let cols = parseInt(3*cw / opts.distance)\n// let rows = parseInt(3*ch / opts.distance)\n\nvar cols = parseInt(3 * cw / xRange) + 2;\nvar rows = parseInt(3 * ch / yRange) + 2;\nvar grids = [];\nvar moving = 0;\n\nfunction setup() {\n  frameRate(16);\n  var gui = new dat.GUI();\n  gui.add(opts, 'rot', 0, 6.28).step(0.01).onChange(draw);\n  gui.add(opts, 'ampl', 20, 600).onChange(draw); // gui.add(opts, 'distance', 2, 30).onChange(draw);\n\n  gui.add(opts, 'lineWidth', 1, 5).onChange(draw);\n  noCanvas();\n  ctx.lineWidth = 3;\n  dtx.lineWidth = 3;\n  var grad = ctx.createLinearGradient(0, ch, cw, 0);\n  grad.addColorStop(0, \"rgba(255, 100, 100, 0.4)\");\n  grad.addColorStop(0.3, \"rgba(255, 255, 255, 0.15)\");\n  grad.addColorStop(0.5, \"rgba(255, 255, 255, 0.3)\");\n  grad.addColorStop(0.7, \"rgba(255, 255, 255, 0.15)\");\n  grad.addColorStop(1, \"rgba(100, 100, 255, 0.4)\");\n  ctx.strokeStyle = grad; // var gradd = dtx.createLinearGradient(-cw/2, ch/2, cw/2, -ch/2);\n  // gradd.addColorStop(0, \"rgba(255, 100, 100, 0.2)\");\n  // gradd.addColorStop(0.3, \"rgba(255, 255, 255, 0.15)\");\n  // gradd.addColorStop(0.5, \"rgba(255, 255, 255, 0.1)\");\n  // gradd.addColorStop(0.7, \"rgba(255, 255, 255, 0.15)\");\n  // gradd.addColorStop(1, \"rgba(100, 100, 255, 0.4)\");\n  // dtx.strokeStyle = gradd;\n  // ctx.strokeStyle = `rgba(255, 255, 255, 0.4)`\n  // dtx.strokeStyle = `rgba(255, 255, 255, 0.4)`\n  // ctx.translate(cx, cy)\n  // dtx.translate(-cx, -cy)\n\n  mouseX = cx, mouseY = cy;\n\n  for (var x = 0; x < cols; x++) {\n    grids[x] = [];\n\n    for (var y = 0; y < rows; y++) {\n      grids[x][y] = 0.0;\n    }\n  }\n}\n\nfunction draw() {\n  ctx.lineWidth = opts.lineWidth; // dtx.lineWidth = opts.lineWidth\n\n  ctx.clearRect(-cw, -ch, 3 * cw, 3 * ch); // dtx.clearRect(-cw, -ch, 3*cw, 3*ch)\n  // let dx = mouseX - tx\n  // tx += dx * easing\n  // let dy = mouseY - ty\n  // ty += dy * easing\n\n  moving += 0.003;\n  var yOffset = moving;\n\n  for (var y = 0; y < rows; y++) {\n    var xOffset = moving;\n\n    for (var x = 0; x < cols; x++) {\n      grids[x][y] = noise(xOffset, yOffset) * opts.ampl + y * opts.distance - ch * 1.5;\n      xOffset += .02;\n    }\n\n    yOffset += .04;\n  }\n\n  noisyLines(frameCount);\n}\n\nfunction noisyLines(frameCount) {\n  for (var y = 0; y < rows; y++) {\n    // dtx.save()\n    ctx.save();\n    ctx.beginPath(); // dtx.translate((tx - cx)/5 , (ty - cy)/5);\n    // dtx.rotate(opts.rot + (tx - cx)/(cw * 3));\n    // ctx.rotate(opts.rot + (tx - cx)/(cw * 3));\n    // dtx.beginPath();\n\n    ctx.translate(cx, cy);\n    ctx.rotate(opts.rot);\n\n    for (var x = 0; x < cols; x++) {\n      // const index = (x + frameCount) % cols\n      // const index = x\n      ctx.lineTo(x * xRange - cw * 1.5, grids[x][y]); // dtx.lineTo(x * opts.distance - cx, grids[cols - x - 1][y])\n    }\n\n    ctx.stroke(); // dtx.stroke();\n\n    ctx.restore(); // dtx.restore()\n  }\n}</script>\n</html>"},"sourceMaps":null,"error":null,"hash":"3b3dde84114b4b8ca2c3e985f2608266","cacheData":{"env":{}}}