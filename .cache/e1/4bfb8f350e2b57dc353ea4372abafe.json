{"id":"threejs/shaders/2/fragment.js","dependencies":[{"name":"/Users/juan/Projects/moire-effect/package.json","includedInParent":true,"mtime":1641979595379},{"name":"../../../resources/glislify.min.js","loc":{"line":2,"column":17},"parent":"/Users/juan/Projects/moire-effect/threejs/shaders/2/fragment.js","resolved":"/Users/juan/Projects/moire-effect/resources/glislify.min.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _glislifyMin = _interopRequireDefault(require(\"../../../resources/glislify.min.js\"));\n\nvar _templateObject;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _glislifyMin.default)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\nprecision mediump float;\\nuniform float time;\\nuniform vec2 resolution;\\n\\n#define PI 3.14159265359\\n\\nvoid main(void) {\\n\\tvec2 uv = (2. * gl_FragCoord.xy - resolution.xy) / resolution.y;\\n  //uv.y += 0.4 * sin(uv.x * sin(time) + time);\\n  //uv.y += 0.1 * sin(uv.x + time/100.);\\n  uv.x += sin(uv.y * 1.6 + time/10.) * sin(uv.x) * 0.4;\\n  //float scroll = time / 20.;\\n  //vec2 noisePos = vec2(scroll + uv.x * 0.015, 0.5 + 0.5 * sin(scroll * PI));\\n  //float numLines = 40. + 160. * sin(PI * noisePos.x);\\n  float numLines = 100.;\\n  float col = 0.7 + 1. * sin(uv.x * numLines);\\n  float aA = 1./(resolution.y / numLines);\\n\\n  \\n\\tgl_FragColor = vec4(smoothstep(0.5 - aA, 0.5 + aA, col) * .6);\\n  //gl_FragColor = vec4(vec3(smoothstep(0.5 - aA, 0.5 + aA, col)), .6);\\n}\\n\"])));\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"threejs/shaders/2/fragment.js","original":{"line":2,"column":0}},{"name":"glsl","generated":{"line":16,"column":19},"source":"threejs/shaders/2/fragment.js","original":{"line":4,"column":15}}],"sources":{"threejs/shaders/2/fragment.js":"\nimport glsl from '../../../resources/glislify.min.js'\n\nexport default glsl`\nprecision mediump float;\nuniform float time;\nuniform vec2 resolution;\n\n#define PI 3.14159265359\n\nvoid main(void) {\n\tvec2 uv = (2. * gl_FragCoord.xy - resolution.xy) / resolution.y;\n  //uv.y += 0.4 * sin(uv.x * sin(time) + time);\n  //uv.y += 0.1 * sin(uv.x + time/100.);\n  uv.x += sin(uv.y * 1.6 + time/10.) * sin(uv.x) * 0.4;\n  //float scroll = time / 20.;\n  //vec2 noisePos = vec2(scroll + uv.x * 0.015, 0.5 + 0.5 * sin(scroll * PI));\n  //float numLines = 40. + 160. * sin(PI * noisePos.x);\n  float numLines = 100.;\n  float col = 0.7 + 1. * sin(uv.x * numLines);\n  float aA = 1./(resolution.y / numLines);\n\n  \n\tgl_FragColor = vec4(smoothstep(0.5 - aA, 0.5 + aA, col) * .6);\n  //gl_FragColor = vec4(vec3(smoothstep(0.5 - aA, 0.5 + aA, col)), .6);\n}\n`"},"lineCount":null}},"error":null,"hash":"afcaa7ada318889d7564749c2dc3c0a6","cacheData":{"env":{}}}